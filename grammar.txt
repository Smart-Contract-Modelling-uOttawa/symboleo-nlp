"obligation delivery is suspended"
- case 1: before the obligation delivery is suspended
- case 2: within 2 weeks of the obligation delivery being suspended




Notes
- Need to address both cases
- want to introduce some encoded grammar knowledge here
- Both are prepositional phrases
-- starts with a preposition: before, within 

case 1: Before [SUBJ] is [ADJ]
- [PREP] [SUBJ] is [ADJ]
- PREP: before
- Subj: The obligation delivery
- ADJ: suspended

case 2: Within [TIMESPAN] of [EVENT_NOUN] being [VERB]

As the user fills it out, we gather components, each of which can take on a number of roles, depending on the frame that is found
- The nodes selected by the user can correspond to frames 

Should bring back the selection object
- holds more information - including the node list
- will also contain the frames 
- init with the list of frames and their grammars 
- when a node is added to the list, re-assess and decide on the frames 

Then how do we fill the frames?
- will need a mapping - 
- for a given node, we look at the frame we're in, and define a mapping to a slot that is filled
- for example, the before node:
-- for frame1, it maps to the preposition with the value of "before"

- Frame1: Before [SUBJ] is [ADJ]
-- SUBJ = basic noun phrase with "the"?
-- ADJ = past form, e.g. ends with 'ed'
-- Pattern: [BEFORE] [EVENT]
-- Then [EVENT] always has a subject and a verb 
--- subject: the contract,  the delivery obligation, the payment
--- verb: terminate, fulfill, complete

So the steps:
- at each selection, check the sequence of node types for the potential frames


- Step 1: all frames possible (special step)
-- choices: Before, Within
-- select: within 
-- frames: 
--- a) WITHIN TIMESPAN of DATE
--- b) WITHIN TIMESPAN of EVENT
-- next choice is TIMESPAN node 

- step 2: enter TIMESPAN
-- entered by user - verified and parsed into 2 components - time value and time unit 
-- frames: a, b

- step 3:
-- choices: describe an event; enter a date 
-- select: event
-- frame: a

- step 4:
-- choices (events): obligation, contract, other, (unknown)
-- select: obligation
-- since obligation is a type of event, we are looking for a subj and verb
-- frame: a (this won't change anymore - we're essentially filling slots now)

- step 5:
-- choices: (from obligations in contract spec...)
-- select: delivery
-- this fills the subject => "the obligation delivery"

- step 6: 
-- choices: (from obligation actions)
-- select: 




case 2: within 2 weeks of the obligation delivery being suspended
- easier: Within [TIMESPAN] of [EVENT_NOUN] being [?PARTICIPLE?]
- full thing is PP
- NP: [TIMESPAN] of [EVENT_NOUN] being [?PARTICIPLE?]
- PP: of [EVENT_NOUN] being [?PARTICIPLE?]
- NP: [EVENT_NOUN (NP)] being [?PARTICIPLE?]
- VP: being [?PARTICIPLE?]

"being" is a gerund

ideas
- have PoS structures as we Iterate
-- e.g. the base preposition: "within" or "before"


- Would it be like having slots?
- We have a pre-defined set of frames. Each frame has a set of slots that must be filled
-- each slot has a specification about the required grammar 
--
- As we go parse through, we figure out which frame we are in
- Each leaf

