GOAL
- our goal is to have 5 full-stack test suites. 
-- This involves beginning with fully specified contracts or FITB templates
-- We then go through a manual process involving experts of creating T and S(T)
- This has lots of value:
- For RQ2, it allows us to identify some useful patterns that appear commonly in contracts.
-- In this way it provides a starting point for a contract-specific CNL 
-- More data is better. Future work involves making more of these  
- it also creates a small dataset for further work on Symboleo 
- it shows a benchmark of where the tool is at. What types of norms and contracts it can handle 
- provides a holistic picture, as opposed to the isolated tests. 
- provides us with a decent variety of domains, yet they still share some common characteristics 
-- e.g. most involve payments, and some other standard contract clauses

METRICS
- This is a small dataset, so the metrics will mostly be qualitative in nature for this set
-- We will look for trends in where the tool can be improved

CASES
- In building the templates, we have a few different cases 
- 1. The norm can be represented in Symboleo and the refinement aligns with our CNL
-- This is fine. We can handle it and ensure that it maps to the proper Symboleo 
- 2: The norm can be represented in Symboleo, but the refinement is too complicated
-- various reasons for this: complex sentences that include many conjuncts
-- This is the main area for analysis and road map planning. 
-- Why can't we represent it. What can be added to our tool to help 
- 3: The norm CANNOT be represented in Symboleo 
-- Likely due to missing concepts in Symboleo (e.g. recurrence)
-- Or may be a case that the NL contract itself is too vague 
-- This requires a separate discussion; it is not the focus, but it provides valuable info as well


GENERAL PROCESS
- Extract the sentences to get T0
-- May not include everything. Theres indemnification, governing law, severability, etc.
- Manually convert T0 into S(T0) - requires experts
- Create S(T) by broadening any norms
-- Wont do all of them. Need to use a bit of common sense, which is why it is still manual 
-- Then Remove any corresponding declarations and domain objects that are unused 
- Create the corresponding T 
-- involves identifying the adjuncts and clauses that correspond 
- Create the test suite 
-- run it. Identify problems...

NOTES
- If working with FITB templates, we will add in sample concrete values, so there is no confusion around the parameters.


ISSUES
- xtext error when I want a Role as a type on an event property. Is there a problem with allowing that?

- in some cases, broadening the contract will yield identical broad norms - a common one is the power to terminate the contract  
-- therefore it makes sense to have a workflow in the application that simply allows the user to create a termination power
-- then we can just remove those from the template T 

- There are some events that could probably be added as "common contract events"
-- provide written notice, breach of agreement 

- Do we have a 1-1 correspondence between a NL sentence and a norm
-- sorta, but not completely
-- we are trying to avoid changing the NL contract as much as possible
-- This is therefore an exercise to show progress (or lack of progress) against full and real contracts 
-- and provides some ideas for a road map 

- How are we going to decide which refinements to allow on a given parameter?
-- We have the parameterconfig - may need to add on to that 

- do date refinements need to be added to the domain? Or just as parameters?
-- probably parms at the very least

- Is there a need to distinguish between events and violated obligations. Since a violated obligation is still an event expression

More XTEXT issues
- how to specify dates
- the START spec for HappensWithin is a new one
- if using the False trigger, how is it represented - may be a new one
- negatives in the PointFunction not accepted