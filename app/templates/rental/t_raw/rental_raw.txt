Domain propertyRentalDomain
  Landlord isA Role;
  Renter isA Role;
  Currency isAn Enumeration(CAD, USD, EUR);
  RentalProperty isAn Asset with address: String;
  Pay isAn Event with amount: Number, currency: Currency, from: Role, to: Role;
  OccupyProperty isAn Event with agent: Role, property: RentalProperty;
  AbandonProperty isAn Event with agent: Role, property: RentalProperty;
  KeepPet isAn Event with agent: Role;
  AllowPets isAn Event with grantor: Role;

endDomain

Contract PropertyRental( renter_id: String, seller_id: String, property_address: String, rent_amount: Number, currency: Currency, late_fee_amount: Number, deposit_amount: Number )

Declarations
  renter: Renter;
  landlord: Landlord;
  property: RentalProperty with address := "123 Main Street";
  evt_pay_rent: Pay with amount := 1500, currency := Currency(CAD), from := renter, to := landlord;
  evt_pay_late: Pay with amount := 500, currency := Currency(CAD), from := renter, to := landlord;
  evt_pay_deposit: Pay with amount := 1000, currency := Currency(CAD), from := renter, to := landlord;
  evt_return_deposit: Pay with amount := 1000, currency := Currency(CAD), from := landlord, to := renter;
  evt_occupy_property: OccupyProperty with agent := renter, property := property;
  evt_abandon_property: AbandonProperty with agent := renter, property := property;
  evt_keep_pet: KeepPet with agent := renter;
  evt_allow_pets: AllowPets with grantor := landlord;

Preconditions

Postconditions

Obligations
  ob_pay_rent: Obligation(renter, landlord, true, Happens(evt_pay_rent));
  ob_late_payment: Happens(Violated(obligations.ob_pay_rent)) -> Obligation(renter, landlord, true, Happens(evt_pay_late));
  ob_pay_deposit: Obligation(renter, landlord, true, WhappensBeforeE(evt_pay_deposit, evt_occupy_property));
  ob_return_deposit: Happens(Terminated(self)) -> Obligation(landlord, renter, true, Happens(evt_return_deposit));
  ob_no_pets: Obligation(renter, landlord, true, not Happens(evt_keep_pet));

Surviving Obligations

Powers
  pow_suspend_ob_no_pets: Happens(evt_allow_pets) -> Power(landlord, renter, true, Suspended(obligations.ob_no_pets));
  pow_termination_abandon: Happens(evt_abandon_property) -> Power(landlord, renter, true, Terminated(self));

Constraints

endContract