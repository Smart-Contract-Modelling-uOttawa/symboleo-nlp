
CONTRACT SPEC:

== Obligations ==
ob_advertise: O(manager, owner, T, Happens(evt_advertise))
- The Manager shall advertise the Property for rent, engage and screen potential renters, enter into rental agreement(s) with acceptable renter(s). 
- * Could create several obligations out of this - split it up?
- stays the same

ob_reimburse: O(owner, manager, T, Happens(evt_reimburse))
- The Owner shall reimburse the Manager for all expenses related to such Advertising. 
- stays the same

ob_notify_expense: O(manager, owner, T, Happens(evt_notify_expense))
- The Manager shall notify the Owner, in advance, of anticipated expenses related to such Advertising.
- stays the same

ob_collection: O(manager, owner, T, Happens(evt_collection))
- The Manager shall be responsible for all collection of Rent earned on the Property. 
- ** This is more like a recurring event...
- stays the same

... Some more basic ones...

ob_invoice: O(manager, owner, T, Happens(evt_provide_invoice))
- The Manager shall provide the Owner invoices of the actual costs.
- ** Should each invoicing be a separate event and tied to a specific purchase event?
- stays the same

ob_legal_proceedings: O(manager, owner, T, Happens(evt_handle_proceeding))
- [CONDITION] The Manager shall handle all such proceedings. 
- CONDITION: In the event that collection and/or legal proceedings become necessary with regard to the rental of the Property
- OR: If legal proceedings on the property become necessary
- * coreferences in the two clauses


ob_disburse: O(manager, owner, T, Happens(evt_disburse))
- [CONDITION] the Manager shall disburse to the Owner any monies in the Managerâ€™s possession due and owing to the Owner [TIMEFRAME]. 
- CONDITION: Upon termination,
- TIMEFFRAME: within {DISBURSEMENT_DAYS} days from the date of termination

ob_termination_reimburse: O(owner, manager, T, Happens(evt_termination_reimburse))
- The Owner shall reimburse the Manager for any expenses incurred or approved prior to the date of termination [CONDITION]
- CONDITION: within {REIMBURSEMENT_DAYS} days from the date of termination.


== Powers ==

pow_termination: Happens(evt_written_notice(role), t) -> P(role, ~role, T, Happens(terminate(self)), t + TERMINATION_NOTICE_DAYS days)
- This Agreement may be terminated at any time by either Party upon {TERMINATION_NOTICE_DAYS} days written notice to the other Party. 
- * Need to figure out how we're handling this one - it's very common
