Domain propertyRentalDomain
  Landlord isA Role;
  Renter isA Role;
  Currency isAn Enumeration(CAD, USD, EUR);
  RentalProperty isAn Asset with address: String;
  Pay isAn Event with amount: Number, currency: Currency, from: Role, to: Role;
  OccupyProperty isAn Event with agent: Role, property: RentalProperty;
  KeepPet isAn Event with agent: Role;
  AllowPets isAn Event with grantor: Role;

endDomain

Contract PropertyRental( renter_id: String, landlord_id: String, property_address: String, currency: Currency, late_fee_amount: Number, deposit_amount: Number )

Declarations
  renter: Renter;
  landlord: Landlord;
  property: RentalProperty with address := "123 Main Street";
  evt_pay_late: Pay with amount := 500, currency := Currency(CAD), from := renter, to := landlord;
  evt_pay_deposit: Pay with amount := 1000, currency := Currency(CAD), from := renter, to := landlord;
  evt_keep_pet: KeepPet with agent := renter;

Preconditions

Postconditions

Obligations
  ob_pay_deposit: Obligation(renter, landlord, true, WhappensBefore(evt_pay_deposit, Date.add(evt_gwssrlid, 2, weeks)));
  ob_pay_extra: Obligation(renter, landlord, Happens(Violated(obligations.ob_pay_deposit)), Happens(evt_pay_late));
  ob_no_pets: Obligation(renter, landlord, true, not Happens(evt_keep_pet));

Surviving Obligations

Powers
  pow_suspend_ob_no_pets: Happens(evt_iugizzib) -> Power(landlord, renter, true, Suspended(obligations.ob_no_pets));

Constraints

endContract