Domain biomassDomain
  Seller isA Role with name: String;
  Buyer isA Role with name: String;
  Currency isAn Enumeration(CAD, USD);
  Biomass isAn Asset with quantity_lbs: Number;
  Location isAn Asset with name: String;
  Gridiron isAn Asset;
  Shi farms isAn Asset;
  Analysis isAn Asset;
  Pay isAn Event with from: Role, to: Role, amount: Number, currency: Currency;
  Quarantine isAn Event with agent: Role, product: Biomass;
  RemoveQuarantine isAn Event with agent: Role, product: Biomass;
  Delivery isAn Event with agent: Role, product: Biomass, location: Location;
  PayShiFarms isAn Event with paying_subject: Gridiron, paid_object: Shi farms;
  DeliverBiomass isAn Event with delivering_subject: Shi farms, delivered_object: Biomass;
  MandateAnalysis isAn Event with mandghting_subject: Gridiron, mandt_object: Analysis;

endDomain

Contract biomass( seller_id: String, seller_name: String, buyer_id: String, buyer_name: String, biomass_quantity: Number, price: Number, currency: Currency )

Declarations
  shi_farms: Shi farms;
  gridiron: Buyer with name := "Gridiron";
  biomass: Biomass with quantity_lbs := 30000;
  lab: Location with name := "lab";
  evt_pay: Pay with to := shi_farms, from := gridiron, amount := 150000, currency := Currency(USD);
  evt_quarantine: Quarantine with agent := shi_farms, product := biomass;
  evt_remove_quarantine: RemoveQuarantine with agent := shi_farms, product := biomass;
  evt_delivery_lab: Delivery with agent := shi_farms, product := biomass, location := lab;
  grid_iron: Gridiron;
  evt_pay_shi_farms: PayShiFarms with paying_subject := grid_iron, paid_object := shi_farms;
  evt_deliver_biomass: DeliverBiomass with delivering_subject := shi_farms, delivered_object := biomass;
  third_party_analysis: Analysis;
  evt_mandate_analysis: MandateAnalysis with mandghting_subject := grid_iron, mandt_object := third_party_analysis;

Preconditions

Postconditions

Obligations
  ob_payment: Obligation(gridiron, shi_farms, Happens(Activated(self)), Happens(evt_pay));
  ob_quarantine: Obligation(shi_farms, gridiron, Happens(evt_pay_shi_farms), Happens(evt_quarantine));
  ob_keep_quarantine: Obligation(shi_farms, gridiron, Happens(evt_quarantine), not WhappensBeforeE(evt_remove_quarantine, evt_deliver_biomass));
  ob_delivery_lab: Obligation(shi_farms, gridiron, Happens(evt_mandate_analysis), Happens(evt_delivery_lab));

Surviving Obligations

Powers

Constraints

endContract