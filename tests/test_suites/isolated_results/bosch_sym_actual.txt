Domain test_dm
  Customer isA Role;
  Client isA Role;
  Productivity isAn Asset;
  ShareRights isAn Event;
  Disrupt isAn Event with disrupting_agent: Role, disrupted_object: Productivity, disrupting_target: Role;

endDomain

Contract test_cs(  )

Declarations
  BOSCH: Customer;
  CLIENT: Client;
  evt_share_rights: ShareRights;
  productivity: Productivity;
  evt_disrupt: Disrupt with disrupting_agent := BOSCH, disrupted_object := productivity, disrupting_target := CLIENT;

Preconditions

Postconditions

Obligations
  ob_not_share: Happens(evt_disrupt) -> Obligation(BOSCH, CLIENT, true, not Happens(evt_share_rights));

Surviving Obligations

Powers

Constraints

endContract